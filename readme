learn leetcode

总结：
1. 关于hash
hash能够快速查找。 
小技巧： 可以使用int数组，甚至int变量(bitmap)来模拟简单的hash（题目: 318）
那么比对两个元素的hash值是否相同就可以直接用 '=='
比较两个元素是否含有相同的值，可以直接使用 '&'

c++ : map<key, value> set<k>   (STL: 容器，迭代器，算法)
python: dict tuple list set
java: hashmap<k,v> hashset<k>

2.动态规划
步骤1： 归纳问题，能够总结出一个状态 f(i)
步骤2： 归纳出状态间的递推表达式

例题： 198

3.string
需要熟悉string的基本用法
c++ string
python str
java String

4. 基本的排序算法
一趟快排: 可以快速将元素分成“两类”
堆排序: 找最大的n个数字

5. 查找算法
二分查找：要求已经排序好
二叉查找树
红黑树

6. 堆栈
用堆模拟栈
用栈模拟堆
可以使用栈来消除递归

7. 数组
需要移动数组元素时，可以动态统计元素需要移动的位置，让元素“一次到位” (27)

8. 位操作
^ : (136); 可以用来swap两个数字 
|
&
trick: n = n & (n-1)  可以去掉n中二进制中的一个1

9. 二叉树
首先需要熟练二叉树的三种遍历方法：先序，中序，后序
会他们的递归版本，和非递归版本

树： DFS BFS (使用Queue， stack)
